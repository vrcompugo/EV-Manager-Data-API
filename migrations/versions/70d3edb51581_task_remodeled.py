"""task remodeled

Revision ID: 70d3edb51581
Revises: e237b3481741
Create Date: 2020-03-11 13:35:03.362678

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '70d3edb51581'
down_revision = 'e237b3481741'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('calendar_event', 'distance_km',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('calendar_event_version', 'distance_km',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True,
               autoincrement=False)
    op.add_column('task', sa.Column('begin', sa.DateTime(), nullable=True))
    op.add_column('task', sa.Column('city', sa.String(length=60), nullable=True))
    op.add_column('task', sa.Column('comment', sa.Text(), nullable=True))
    op.add_column('task', sa.Column('company', sa.String(length=100), nullable=True))
    op.add_column('task', sa.Column('distance_km', sa.Integer(), nullable=True))
    op.add_column('task', sa.Column('end', sa.DateTime(), nullable=True))
    op.add_column('task', sa.Column('firstname', sa.String(length=100), nullable=True))
    op.add_column('task', sa.Column('lastname', sa.String(length=100), nullable=True))
    op.add_column('task', sa.Column('lat', sa.Float(), nullable=True))
    op.add_column('task', sa.Column('lng', sa.Float(), nullable=True))
    op.add_column('task', sa.Column('order_id', sa.Integer(), nullable=True))
    op.add_column('task', sa.Column('salutation', sa.String(length=30), nullable=True))
    op.add_column('task', sa.Column('status', sa.String(length=30), nullable=True))
    op.add_column('task', sa.Column('street', sa.String(length=100), nullable=True))
    op.add_column('task', sa.Column('street_nb', sa.String(length=80), nullable=True))
    op.add_column('task', sa.Column('title', sa.String(length=30), nullable=True))
    op.add_column('task', sa.Column('travel_time_minutes', sa.Integer(), nullable=True))
    op.add_column('task', sa.Column('type', sa.String(length=40), nullable=True))
    op.add_column('task', sa.Column('zip', sa.String(length=20), nullable=True))
    op.drop_constraint('task_product_id_fkey', 'task', type_='foreignkey')
    op.drop_constraint('task_role_id_fkey', 'task', type_='foreignkey')
    op.drop_constraint('task_contract_id_fkey', 'task', type_='foreignkey')
    op.drop_constraint('task_project_id_fkey', 'task', type_='foreignkey')
    op.drop_constraint('task_pv_system_id_fkey', 'task', type_='foreignkey')
    op.drop_constraint('task_offer_id_fkey', 'task', type_='foreignkey')
    op.drop_constraint('task_survey_id_fkey', 'task', type_='foreignkey')
    op.create_foreign_key(None, 'task', 'order', ['order_id'], ['id'])
    op.drop_column('task', 'offer_id')
    op.drop_column('task', 'role_id')
    op.drop_column('task', 'pv_system_id')
    op.drop_column('task', 'reminder_datetime')
    op.drop_column('task', 'product_id')
    op.drop_column('task', 'datetime')
    op.drop_column('task', 'project_id')
    op.drop_column('task', 'action')
    op.drop_column('task', 'survey_id')
    op.drop_column('task', 'link')
    op.drop_column('task', 'contract_id')
    op.drop_column('task', 'description')
    op.add_column('task_version', sa.Column('begin', sa.DateTime(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('city', sa.String(length=60), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('comment', sa.Text(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('company', sa.String(length=100), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('distance_km', sa.Integer(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('end', sa.DateTime(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('firstname', sa.String(length=100), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('lastname', sa.String(length=100), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('lat', sa.Float(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('lng', sa.Float(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('order_id', sa.Integer(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('salutation', sa.String(length=30), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('status', sa.String(length=30), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('street', sa.String(length=100), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('street_nb', sa.String(length=80), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('title', sa.String(length=30), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('travel_time_minutes', sa.Integer(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('type', sa.String(length=40), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('zip', sa.String(length=20), autoincrement=False, nullable=True))
    op.drop_column('task_version', 'offer_id')
    op.drop_column('task_version', 'role_id')
    op.drop_column('task_version', 'pv_system_id')
    op.drop_column('task_version', 'reminder_datetime')
    op.drop_column('task_version', 'product_id')
    op.drop_column('task_version', 'datetime')
    op.drop_column('task_version', 'project_id')
    op.drop_column('task_version', 'action')
    op.drop_column('task_version', 'survey_id')
    op.drop_column('task_version', 'link')
    op.drop_column('task_version', 'contract_id')
    op.drop_column('task_version', 'description')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('task_version', sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('contract_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('link', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('survey_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('action', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('reminder_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('pv_system_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task_version', sa.Column('offer_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('task_version', 'zip')
    op.drop_column('task_version', 'type')
    op.drop_column('task_version', 'travel_time_minutes')
    op.drop_column('task_version', 'title')
    op.drop_column('task_version', 'street_nb')
    op.drop_column('task_version', 'street')
    op.drop_column('task_version', 'status')
    op.drop_column('task_version', 'salutation')
    op.drop_column('task_version', 'order_id')
    op.drop_column('task_version', 'lng')
    op.drop_column('task_version', 'lat')
    op.drop_column('task_version', 'lastname')
    op.drop_column('task_version', 'firstname')
    op.drop_column('task_version', 'end')
    op.drop_column('task_version', 'distance_km')
    op.drop_column('task_version', 'company')
    op.drop_column('task_version', 'comment')
    op.drop_column('task_version', 'city')
    op.drop_column('task_version', 'begin')
    op.add_column('task', sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('contract_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('link', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('survey_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('action', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('reminder_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('pv_system_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('offer_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.create_foreign_key('task_survey_id_fkey', 'task', 'survey', ['survey_id'], ['id'])
    op.create_foreign_key('task_offer_id_fkey', 'task', 'offer', ['offer_id'], ['id'])
    op.create_foreign_key('task_pv_system_id_fkey', 'task', 'pv_system', ['pv_system_id'], ['id'])
    op.create_foreign_key('task_project_id_fkey', 'task', 'project', ['project_id'], ['id'])
    op.create_foreign_key('task_contract_id_fkey', 'task', 'contract', ['contract_id'], ['id'])
    op.create_foreign_key('task_role_id_fkey', 'task', 'user_role', ['role_id'], ['id'])
    op.create_foreign_key('task_product_id_fkey', 'task', 'product', ['product_id'], ['id'])
    op.drop_column('task', 'zip')
    op.drop_column('task', 'type')
    op.drop_column('task', 'travel_time_minutes')
    op.drop_column('task', 'title')
    op.drop_column('task', 'street_nb')
    op.drop_column('task', 'street')
    op.drop_column('task', 'status')
    op.drop_column('task', 'salutation')
    op.drop_column('task', 'order_id')
    op.drop_column('task', 'lng')
    op.drop_column('task', 'lat')
    op.drop_column('task', 'lastname')
    op.drop_column('task', 'firstname')
    op.drop_column('task', 'end')
    op.drop_column('task', 'distance_km')
    op.drop_column('task', 'company')
    op.drop_column('task', 'comment')
    op.drop_column('task', 'city')
    op.drop_column('task', 'begin')
    op.alter_column('calendar_event_version', 'distance_km',
               existing_type=sa.Integer(),
               type_=postgresql.DOUBLE_PRECISION(precision=53),
               existing_nullable=True,
               autoincrement=False)
    op.alter_column('calendar_event', 'distance_km',
               existing_type=sa.Integer(),
               type_=postgresql.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    # ### end Alembic commands ###
