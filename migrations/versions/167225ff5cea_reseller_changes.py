"""reseller changes

Revision ID: 167225ff5cea
Revises: e4d9b07e45ff
Create Date: 2020-02-07 08:29:44.141016

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '167225ff5cea'
down_revision = 'e4d9b07e45ff'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_event_trigger_version_end_transaction_id', table_name='event_trigger_version')
    op.drop_index('ix_event_trigger_version_operation_type', table_name='event_trigger_version')
    op.drop_index('ix_event_trigger_version_transaction_id', table_name='event_trigger_version')
    op.drop_table('event_trigger_version')
    op.drop_index('ix_event_action_version_end_transaction_id', table_name='event_action_version')
    op.drop_index('ix_event_action_version_operation_type', table_name='event_action_version')
    op.drop_index('ix_event_action_version_transaction_id', table_name='event_action_version')
    op.drop_table('event_action_version')
    op.drop_table('event_action')
    op.drop_table('event_trigger')
    op.add_column('reseller', sa.Column('active', sa.Boolean(), nullable=True))
    op.add_column('reseller', sa.Column('bitrix_department', sa.String(length=120), nullable=True))
    op.add_column('reseller', sa.Column('last_assigned_lead', sa.DateTime(), nullable=True))
    op.add_column('reseller_version', sa.Column('active', sa.Boolean(), autoincrement=False, nullable=True))
    op.add_column('reseller_version', sa.Column('bitrix_department', sa.String(length=120), autoincrement=False, nullable=True))
    op.add_column('reseller_version', sa.Column('last_assigned_lead', sa.DateTime(), autoincrement=False, nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('reseller_version', 'last_assigned_lead')
    op.drop_column('reseller_version', 'bitrix_department')
    op.drop_column('reseller_version', 'active')
    op.drop_column('reseller', 'last_assigned_lead')
    op.drop_column('reseller', 'bitrix_department')
    op.drop_column('reseller', 'active')
    op.create_table('event_trigger',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('error', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='event_trigger_pkey')
    )
    op.create_table('event_action',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('action', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ordering', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('conditions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('triggers', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='event_action_pkey')
    )
    op.create_table('event_action_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ordering', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('conditions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('triggers', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='event_action_version_pkey')
    )
    op.create_index('ix_event_action_version_transaction_id', 'event_action_version', ['transaction_id'], unique=False)
    op.create_index('ix_event_action_version_operation_type', 'event_action_version', ['operation_type'], unique=False)
    op.create_index('ix_event_action_version_end_transaction_id', 'event_action_version', ['end_transaction_id'], unique=False)
    op.create_table('event_trigger_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('error', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='event_trigger_version_pkey')
    )
    op.create_index('ix_event_trigger_version_transaction_id', 'event_trigger_version', ['transaction_id'], unique=False)
    op.create_index('ix_event_trigger_version_operation_type', 'event_trigger_version', ['operation_type'], unique=False)
    op.create_index('ix_event_trigger_version_end_transaction_id', 'event_trigger_version', ['end_transaction_id'], unique=False)
    # ### end Alembic commands ###
